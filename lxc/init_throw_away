##!/bin/bash
Cyan='\033[0;36m' # Cyan
NC='\033[0m' # No Color

echo "[${Cyan}+${NC}] Creating new throwaway shell..."

lxc-stop --name pg
lxc-destroy --name pg

# Check if the container is created yet
if ! lxc-info --name pg | grep -q "pg doesn't exist" 2>&1; then 
   lxc-create --name pg --template download -- --dist alpine --release 3.19 --arch amd64
   lxc-start --name pg
   echo "======================"
   lxc-ls --fancy
   echo "======================"
fi

# Check if the container "pg" is running as a failsafe
if ! lxc-info -n pg | grep -q "RUNNING"; then
    echo "[${Cyan}+${NC}] Container 'pg' is not running. Starting it..."
    lxc-start --name pg
fi

check_and_install() {  
    package=$1
    version=$2
    if [ -z "$version" ]; then
        package_spec=$package
        version_msg=""
    else
        package_spec="${package}=${version}"
        version_msg="version $version "
    fi
    
    if ! lxc-attach -n pg -- command -v $package >/dev/null 2>&1; then
        lxc-attach -n pg -- apk update >/dev/null 2>&1
        lxc-attach -n pg -- apk add --upgrade apk-tools >/dev/null 2>&1
        lxc-attach -n pg -- apk upgrade --available >/dev/null 2>&1
        lxc-attach -n pg -- apk add $package_spec >/dev/null 2>&1
        echo "[${Cyan}+${NC}] $package ${version_msg}done"
    fi
}

# Install packages
echo "[${Cyan}+${NC}] Installing packages..."

check_and_install python3
check_and_install git
check_and_install perl 
check_and_install nano
check_and_install wget
check_and_install bash
check_and_install curl
check_and_install ruby
check_and_install py-pip

echo "[${Cyan}+${NC}] Done, bye!"
echo ""

lxc-attach --name pg
